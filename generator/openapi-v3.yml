openapi: 3.0.2
info:
  title: TimeSide API
  version: 1.0.0
  description: RESTful API of TimeSide, a scalable audio processing framework.
paths:
  /timeside/api/users/:
    get:
      operationId: listUsers
      description: Users of the API able to share data.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /timeside/api/users/{username}/:
    get:
      operationId: retrieveUser
      description: Users of the API able to share data.
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /timeside/api/items/:
    get:
      operationId: listItems
      description: ''
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemList'
          description: ''
    post:
      operationId: createItem
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id001
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema: *id001
          multipart/form-data:
            schema: *id001
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /timeside/api/items/{uuid}/:
    get:
      operationId: retrieveItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: updateItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id002
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema: *id002
          multipart/form-data:
            schema: *id002
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: partial_updateItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id003
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema: *id003
          multipart/form-data:
            schema: *id003
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: destroyItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/providers/:
    get:
      operationId: listProviders
      description: Audio providers available in the API.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
          description: ''
  /timeside/api/providers/{uuid}/:
    get:
      operationId: retrieveProvider
      description: Audio providers available in the API.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this provider.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
  /timeside/api/selections/:
    get:
      operationId: listSelections
      description: Set of items and other selections.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Selection'
          description: ''
    post:
      operationId: createSelection
      description: Set of items and other selections.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id004
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema: *id004
          multipart/form-data:
            schema: *id004
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
  /timeside/api/selections/{uuid}/:
    get:
      operationId: retrieveSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
    put:
      operationId: updateSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id005
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema: *id005
          multipart/form-data:
            schema: *id005
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
    patch:
      operationId: partial_updateSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id006
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema: *id006
          multipart/form-data:
            schema: *id006
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
    delete:
      operationId: destroySelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/processors/:
    get:
      operationId: listProcessors
      description: Audio process to compute on items given potential parameters
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessorList'
          description: ''
  /timeside/api/processors/{pid}/:
    get:
      operationId: retrieveProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
  /timeside/api/processors/{pid}/parameters_default/:
    get:
      operationId: parameters_defaultProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
  /timeside/api/processors/{pid}/parameters_schema/:
    get:
      operationId: parameters_schemaProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
  /timeside/api/presets/:
    get:
      operationId: listPresets
      description: Processor with its potential parameters.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preset'
          description: ''
    post:
      operationId: createPreset
      description: Processor with its potential parameters.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id007
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema: *id007
          multipart/form-data:
            schema: *id007
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
  /timeside/api/presets/{uuid}/:
    get:
      operationId: retrievePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
    put:
      operationId: updatePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id008
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema: *id008
          multipart/form-data:
            schema: *id008
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
    patch:
      operationId: partial_updatePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id009
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema: *id009
          multipart/form-data:
            schema: *id009
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
    delete:
      operationId: destroyPreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/experiences/:
    get:
      operationId: listExperiences
      description: Set of presets and other experiences.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experience'
          description: ''
    post:
      operationId: createExperience
      description: Set of presets and other experiences.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id010
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema: *id010
          multipart/form-data:
            schema: *id010
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
  /timeside/api/experiences/{uuid}/:
    get:
      operationId: retrieveExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    put:
      operationId: updateExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id011
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema: *id011
          multipart/form-data:
            schema: *id011
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    patch:
      operationId: partial_updateExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id012
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema: *id012
          multipart/form-data:
            schema: *id012
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    delete:
      operationId: destroyExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/tasks/:
    get:
      operationId: listTasks
      description: Experience applied to a selection or a single item.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: createTask
      description: Experience applied to a selection or a single item.
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id013
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema: *id013
          multipart/form-data:
            schema: *id013
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /timeside/api/tasks/{uuid}/:
    get:
      operationId: retrieveTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: updateTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id014
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema: *id014
          multipart/form-data:
            schema: *id014
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: partial_updateTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id015
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema: *id015
          multipart/form-data:
            schema: *id015
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: destroyTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/analysis/:
    get:
      operationId: listAnalysis
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Analysis'
          description: ''
    post:
      operationId: createAnalysis
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id016
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema: *id016
          multipart/form-data:
            schema: *id016
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
  /timeside/api/analysis/{uuid}/:
    get:
      operationId: retrieveAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
    put:
      operationId: updateAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id017
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema: *id017
          multipart/form-data:
            schema: *id017
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
    patch:
      operationId: partial_updateAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id018
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema: *id018
          multipart/form-data:
            schema: *id018
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
    delete:
      operationId: destroyAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/analysis_tracks/:
    get:
      operationId: listAnalysisTracks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisTrack'
          description: ''
    post:
      operationId: createAnalysisTrack
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id019
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema: *id019
          multipart/form-data:
            schema: *id019
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
  /timeside/api/analysis_tracks/{uuid}/:
    get:
      operationId: retrieveAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
    put:
      operationId: updateAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id020
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema: *id020
          multipart/form-data:
            schema: *id020
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
    patch:
      operationId: partial_updateAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id021
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema: *id021
          multipart/form-data:
            schema: *id021
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
    delete:
      operationId: destroyAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/analysis_tracks/{uuid}/parameters_default/:
    get:
      operationId: parameters_defaultAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
  /timeside/api/annotation_tracks/:
    get:
      operationId: listAnnotationTracks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationTrack'
          description: ''
    post:
      operationId: createAnnotationTrack
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id022
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema: *id022
          multipart/form-data:
            schema: *id022
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
  /timeside/api/annotation_tracks/{uuid}/:
    get:
      operationId: retrieveAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
    put:
      operationId: updateAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id023
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema: *id023
          multipart/form-data:
            schema: *id023
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
    patch:
      operationId: partial_updateAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id024
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema: *id024
          multipart/form-data:
            schema: *id024
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
    delete:
      operationId: destroyAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/annotations/:
    get:
      operationId: listAnnotations
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
          description: ''
    post:
      operationId: createAnnotation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id025
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema: *id025
          multipart/form-data:
            schema: *id025
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
  /timeside/api/annotations/{uuid}/:
    get:
      operationId: retrieveAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this annotation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    put:
      operationId: updateAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this annotation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id026
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema: *id026
          multipart/form-data:
            schema: *id026
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    patch:
      operationId: partial_updateAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this annotation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id027
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema: *id027
          multipart/form-data:
            schema: *id027
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
    delete:
      operationId: destroyAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this annotation.
        schema:
          type: string
      responses:
        '204':
          description: ''
  /timeside/api/results/:
    get:
      operationId: listResults
      description: Result of processing on items.
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
          description: ''
  /timeside/api/results/{uuid}/:
    get:
      operationId: retrieveResult
      description: Result of processing on items.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Result.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
  /timeside/api/token-csrf/:
    get:
      operationId: listCsrf_Tokens
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /timeside/api/items/{uuid}/waveform/:
    get:
      operationId: RetrieveItem
      description: Gives audio waveform of an item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWaveform'
          description: ''
  /timeside/api/results/{uuid}/visual/:
    get:
      operationId: RetrieveResult
      description: 'PNG rendering of 2D numerical data (example: a spectrogram).'
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Result.
        schema:
          type: string
      responses:
        '200':
          content:
            image/png:
              schema: {}
          description: ''
  /timeside/api/analysis_tracks/{uuid}/set_parameters/:
    post:
      operationId: set_parametersAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id028
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema: *id028
          multipart/form-data:
            schema: *id028
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
  /timeside/api/token/:
    post:
      operationId: CreateTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id030
              properties:
                username:
                  type: string
              required:
              - username
          application/x-www-form-urlencoded:
            schema: *id030
          multipart/form-data:
            schema: *id030
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  username:
                    type: string
                required:
                - username
          description: ''
  /timeside/api/token/refresh/:
    post:
      operationId: CreateTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id031
              properties:
                refresh:
                  type: string
              required:
              - refresh
          application/x-www-form-urlencoded:
            schema: *id031
          multipart/form-data:
            schema: *id031
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  refresh:
                    type: string
                required:
                - refresh
          description: ''
  /timeside/api/token/verify/:
    post:
      operationId: CreateTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id032
              properties:
                token:
                  type: string
              required:
              - token
          application/x-www-form-urlencoded:
            schema: *id032
          multipart/form-data:
            schema: *id032
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                required:
                - token
          description: ''
components:
  schemas:
    User:
      properties:
        url:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    ItemList:
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        player_url:
          type: string
          readOnly: true
        source_file:
          type: string
          format: binary
          description: Audio file to process.
        source_url:
          type: string
          format: uri
          description: URL of a streamable audio source to process.
          maxLength: 1024
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
            .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
            0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\Z"
        mime_type:
          type: string
          maxLength: 256
    Item:
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        player_url:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        source_file:
          type: string
          format: binary
          description: Audio file to process.
        source_url:
          type: string
          format: uri
          description: URL of a streamable audio source to process.
          maxLength: 1024
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
            .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
            0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\Z"
        mime_type:
          type: string
          maxLength: 256
        audio_url:
          properties:
            mp3:
              type: string
              format: uri
              readOnly: true
              pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
                .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
                0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
                s]*)?\\Z"
            ogg:
              type: string
              format: uri
              readOnly: true
              pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:\\\
                .]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF\
                0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
                -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
                s]*)?\\Z"
          type: object
          readOnly: true
        audio_duration:
          type: number
          readOnly: true
          description: Duration of audio track.
        external_uri:
          type: string
          description: 'Provider''s URI of the audio source.


            e.g. for Deezer preview: http://www.deezer.com/track/4763165


            e.g. for YouTube: https://www.youtube.com/watch?v=oRdxUFDoQe0'
          maxLength: 1024
        external_id:
          type: string
          description: 'Provider''s id of the audio source.


            e.g. for Deezer preview: 4763165


            e.g. for YouTube: oRdxUFDoQe0'
          maxLength: 256
        waveform_url:
          type: string
          readOnly: true
        annotation_tracks:
          type: array
          items:
            type: string
          readOnly: true
        analysis_tracks:
          type: array
          items:
            type: string
          readOnly: true
        provider:
          type: string
          nullable: true
          description: Audio provider (e.g. Deezer, Youtube, etc.)
    Provider:
      properties:
        pid:
          type: string
          maxLength: 128
        uuid:
          type: string
          format: uuid
          readOnly: true
        source_access:
          type: boolean
          description: Whether or not the audio is freely available from the provider.
    Selection:
      properties:
        title:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        items:
          type: array
          items:
            type: string
        selections:
          type: array
          items:
            type: string
          description: Include other selections in an selection.
        author:
          type: string
          nullable: true
    ProcessorList:
      properties:
        name:
          type: string
          maxLength: 256
        pid:
          enum:
          - vamp_simple_host
          - aubio_melenergy
          - aubio_mfcc
          - aubio_pitch
          - aubio_silence
          - aubio_specdesc
          - aubio_temporal
          - essentia_dissonance
          - vamp_constantq
          - loudness_itu
          - spectrogram_analyzer
          - onset_detection_function
          - spectrogram_analyzer_buffer
          - waveform_analyzer
          - mean_dc_shift
          - essentia_dissonance_value
          - vamp_tempo
          - vamp_tuning
          - level
          - live_encoder
          - flac_encoder
          - aac_encoder
          - mp3_encoder
          - vorbis_encoder
          - opus_encoder
          - wav_encoder
          - webm_encoder
          - grapher_aubio_pitch
          - grapher_aubio_silence
          - grapher_dissonance
          - grapher_vamp_cqt
          - grapher_loudness_itu
          - spectrogram
          - grapher_onset_detection_function
          - grapher_waveform
          - spectrogram_log
          - spectrogram_lin
          - waveform_simple
          - waveform_centroid
          - waveform_contour_black
          - waveform_contour_white
          - waveform_transparent
        url:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 64
      required:
      - pid
    Processor:
      properties:
        name:
          type: string
          maxLength: 256
        pid:
          enum:
          - vamp_simple_host
          - aubio_melenergy
          - aubio_mfcc
          - aubio_pitch
          - aubio_silence
          - aubio_specdesc
          - aubio_temporal
          - essentia_dissonance
          - vamp_constantq
          - loudness_itu
          - spectrogram_analyzer
          - onset_detection_function
          - spectrogram_analyzer_buffer
          - waveform_analyzer
          - mean_dc_shift
          - essentia_dissonance_value
          - vamp_tempo
          - vamp_tuning
          - level
          - live_encoder
          - flac_encoder
          - aac_encoder
          - mp3_encoder
          - vorbis_encoder
          - opus_encoder
          - wav_encoder
          - webm_encoder
          - grapher_aubio_pitch
          - grapher_aubio_silence
          - grapher_dissonance
          - grapher_vamp_cqt
          - grapher_loudness_itu
          - spectrogram
          - grapher_onset_detection_function
          - grapher_waveform
          - spectrogram_log
          - spectrogram_lin
          - waveform_simple
          - waveform_centroid
          - waveform_contour_black
          - waveform_contour_white
          - waveform_transparent
        url:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 64
        parameters_schema:
          type: string
          readOnly: true
      required:
      - pid
    Preset:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        processor:
          type: string
          nullable: true
        parameters:
          type: string
    Experience:
      properties:
        title:
          type: string
          maxLength: 512
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        presets:
          type: array
          items:
            type: string
        is_public:
          type: boolean
        author:
          type: string
          nullable: true
    Task:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        experience:
          type: string
          nullable: true
          description: Experience prossessed in the task.
        selection:
          type: string
          nullable: true
          description: Selection prossessed in the task.
        status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: 'Task''s status:


            failed: 0


            draft: 1


            pending: 2


            running: 3


            done: 4'
          minimum: -2147483648
          maximum: 2147483647
        author:
          type: string
          nullable: true
        item:
          type: string
          nullable: true
          description: Single item prossessed in the task.
    Analysis:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        preset:
          type: string
        sub_processor:
          type: string
        parameters_schema:
          type: object
      required:
      - preset
      - sub_processor
      - parameters_schema
    AnalysisTrack:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        analysis:
          type: string
        item:
          type: string
        result_url:
          type: string
          readOnly: true
        parameters_schema:
          type: string
          readOnly: true
        parameters_default:
          type: string
          readOnly: true
        parametrizable:
          type: string
          readOnly: true
      required:
      - analysis
      - item
    AnnotationTrack:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        item:
          type: string
        title:
          type: string
          maxLength: 512
        description:
          type: string
        author:
          type: string
          nullable: true
        is_public:
          type: boolean
        overlapping:
          type: boolean
        annotations:
          type: array
          items:
            properties:
              url:
                type: string
                readOnly: true
              uuid:
                type: string
                format: uuid
                readOnly: true
              title:
                type: string
                maxLength: 512
              description:
                type: string
              start_time:
                type: number
              stop_time:
                type: number
            required:
            - stop_time
          readOnly: true
      required:
      - item
    Annotation:
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        track:
          type: string
        title:
          type: string
          maxLength: 512
        description:
          type: string
        start_time:
          type: number
        stop_time:
          type: number
      required:
      - track
      - stop_time
    Result:
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        item:
          type: string
          nullable: true
          description: Item on which a preset has been applied.
        preset:
          type: string
          nullable: true
          description: Preset applied on an item.
        status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          description: 'Status of the task giving the result:


            failed: 0


            draft: 1


            pending: 2


            running: 3


            done: 4'
          minimum: -2147483648
          maximum: 2147483647
        hdf5:
          type: string
          format: binary
          description: Numerical result of the processing stored in an hdf5 file.
        file:
          type: string
          format: binary
          description: 'Non numerical result stored in a file

            (image, transcoded audio, etc.)'
        run_time:
          type: string
          nullable: true
          description: Duration of the result computing.
    ItemWaveform:
      properties:
        item_url:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        waveform_url:
          type: string
          readOnly: true
        waveform:
          properties:
            start:
              type: integer
            stop:
              type: integer
              default: -1
            nb_pixels:
              type: integer
              minimum: 0
            min_values:
              type: array
              items:
                type: number
            max_values:
              type: array
              items:
                type: number
            time_values:
              type: array
              items:
                type: integer
          required:
          - nb_pixels
          - min_values
          - max_values
          - time_values
          type: object
          readOnly: true
        waveform_image_url:
          type: string
          readOnly: true
servers:
- url: https://wasabi.telemeta.org/
  description: Production server
- url: https://sandbox.wasabi.telemeta.org/
  description: Staging server
