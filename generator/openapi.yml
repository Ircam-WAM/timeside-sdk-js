openapi: 3.0.2
info:
  title: TimeSide API
  version: 1.0.0
  description: RESTful API of TimeSide, a scalable audio processing framework.
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: Users of the API able to share data.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - timeside
  /api/users/{username}/:
    get:
      operationId: retrieveUser
      description: Users of the API able to share data.
      parameters:
      - name: username
        in: path
        required: true
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - timeside
  /api/items/:
    get:
      operationId: listItems
      description: ''
      parameters:
      - name: provider_pid
        required: false
        in: query
        description: provider_pid
        schema:
          type: string
      - name: external_id
        required: false
        in: query
        description: external_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemList'
          description: ''
      tags:
      - timeside
    post:
      operationId: createItem
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - timeside
  /api/items/{uuid}/:
    get:
      operationId: retrieveItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: provider_pid
        required: false
        in: query
        description: provider_pid
        schema:
          type: string
      - name: external_id
        required: false
        in: query
        description: external_id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: provider_pid
        required: false
        in: query
        description: provider_pid
        schema:
          type: string
      - name: external_id
        required: false
        in: query
        description: external_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: provider_pid
        required: false
        in: query
        description: provider_pid
        schema:
          type: string
      - name: external_id
        required: false
        in: query
        description: external_id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyItem
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: provider_pid
        required: false
        in: query
        description: provider_pid
        schema:
          type: string
      - name: external_id
        required: false
        in: query
        description: external_id
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/providers/:
    get:
      operationId: listProviders
      description: Audio providers available in the API.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
          description: ''
      tags:
      - timeside
  /api/providers/{uuid}/:
    get:
      operationId: retrieveProvider
      description: Audio providers available in the API.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this provider.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
          description: ''
      tags:
      - timeside
  /api/selections/:
    get:
      operationId: listSelections
      description: Set of items and other selections.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Selection'
          description: ''
      tags:
      - timeside
    post:
      operationId: createSelection
      description: Set of items and other selections.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Selection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Selection'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
      tags:
      - timeside
  /api/selections/{uuid}/:
    get:
      operationId: retrieveSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Selection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Selection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateSelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Selection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Selection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Selection'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Selection'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroySelection
      description: Set of items and other selections.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this selection.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/processors/:
    get:
      operationId: listProcessors
      description: Audio process to compute on items given potential parameters
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessorList'
          description: ''
      tags:
      - timeside
  /api/processors/{pid}/:
    get:
      operationId: retrieveProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
      tags:
      - timeside
  /api/processors/{pid}/parameters_default/:
    get:
      operationId: parametersDefaultProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
      tags:
      - timeside
  /api/processors/{pid}/parameters_schema/:
    get:
      operationId: parametersSchemaProcessor
      description: Audio process to compute on items given potential parameters
      parameters:
      - name: pid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
          description: ''
      tags:
      - timeside
  /api/subprocessors/:
    get:
      operationId: listSubProcessors
      description: 'Store a result id associated with a given Processor,

        i.e. the id of one of the different process it does.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubProcessor'
          description: ''
      tags:
      - timeside
  /api/subprocessors/{sub_processor_id}/:
    get:
      operationId: retrieveSubProcessor
      description: 'Store a result id associated with a given Processor,

        i.e. the id of one of the different process it does.'
      parameters:
      - name: sub_processor_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubProcessor'
          description: ''
      tags:
      - timeside
  /api/presets/:
    get:
      operationId: listPresets
      description: Processor with its potential parameters.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preset'
          description: ''
      tags:
      - timeside
    post:
      operationId: createPreset
      description: Processor with its potential parameters.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Preset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Preset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
      tags:
      - timeside
  /api/presets/{uuid}/:
    get:
      operationId: retrievePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
      tags:
      - timeside
    put:
      operationId: updatePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Preset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Preset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdatePreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Preset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Preset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preset'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyPreset
      description: Processor with its potential parameters.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Preset.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/experiences/:
    get:
      operationId: listExperiences
      description: Set of presets and other experiences.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experience'
          description: ''
      tags:
      - timeside
    post:
      operationId: createExperience
      description: Set of presets and other experiences.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
      tags:
      - timeside
  /api/experiences/{uuid}/:
    get:
      operationId: retrieveExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyExperience
      description: Set of presets and other experiences.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Experience.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/tasks/:
    get:
      operationId: listTasks
      description: Experience applied to a selection or a single item.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - timeside
    post:
      operationId: createTask
      description: Experience applied to a selection or a single item.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - timeside
  /api/tasks/{uuid}/:
    get:
      operationId: retrieveTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyTask
      description: Experience applied to a selection or a single item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Task.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/analysis/:
    get:
      operationId: listAnalysis
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Analysis'
          description: ''
      tags:
      - timeside
    post:
      operationId: createAnalysis
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Analysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Analysis'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
      tags:
      - timeside
  /api/analysis/{uuid}/:
    get:
      operationId: retrieveAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Analysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Analysis'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analysis'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Analysis'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Analysis'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyAnalysis
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Analysis.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/analysis_tracks/:
    get:
      operationId: listAnalysisTracks
      description: ''
      parameters:
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
    post:
      operationId: createAnalysisTrack
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
  /api/analysis_tracks/{uuid}/:
    get:
      operationId: retrieveAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/analysis_tracks/{uuid}/parameters_default/:
    get:
      operationId: parametersDefaultAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
  /api/annotation_tracks/:
    get:
      operationId: listAnnotationTracks
      description: ''
      parameters:
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnnotationTrack'
          description: ''
      tags:
      - timeside
    post:
      operationId: createAnnotationTrack
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
      tags:
      - timeside
  /api/annotation_tracks/{uuid}/:
    get:
      operationId: retrieveAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnnotationTrack'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnotationTrack'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyAnnotationTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation Track.
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/annotations/:
    get:
      operationId: listAnnotations
      description: ''
      parameters:
      - name: track_uuid
        required: false
        in: query
        description: track_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - timeside
    post:
      operationId: createAnnotation
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - timeside
  /api/annotations/{uuid}/:
    get:
      operationId: retrieveAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation.
        schema:
          type: string
      - name: track_uuid
        required: false
        in: query
        description: track_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - timeside
    put:
      operationId: updateAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation.
        schema:
          type: string
      - name: track_uuid
        required: false
        in: query
        description: track_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - timeside
    patch:
      operationId: partialUpdateAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation.
        schema:
          type: string
      - name: track_uuid
        required: false
        in: query
        description: track_uuid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Annotation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: ''
      tags:
      - timeside
    delete:
      operationId: destroyAnnotation
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Annotation.
        schema:
          type: string
      - name: track_uuid
        required: false
        in: query
        description: track_uuid
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - timeside
  /api/results/:
    get:
      operationId: listResults
      description: Result of processing on items.
      parameters:
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      - name: preset_uuid
        required: false
        in: query
        description: preset_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
          description: ''
      tags:
      - timeside
  /api/results/{uuid}/:
    get:
      operationId: retrieveResult
      description: Result of processing on items.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Result.
        schema:
          type: string
      - name: item_uuid
        required: false
        in: query
        description: item_uuid
        schema:
          type: string
      - name: preset_uuid
        required: false
        in: query
        description: preset_uuid
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: ''
      tags:
      - timeside
  /api/token-csrf/:
    get:
      operationId: listCsrfTokens
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - timeside
  /api/items/{uuid}/waveform/:
    get:
      operationId: retrieveItemWaveform
      description: Gives audio waveform of an item.
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      - name: start
        required: false
        in: query
        description: ''
        schema:
          type: number
      - name: stop
        required: false
        in: query
        description: ''
        schema:
          type: number
      - name: nb_pixels
        required: false
        in: query
        description: ''
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWaveform'
          description: ''
      tags:
      - timeside
  /api/results/{uuid}/visual/:
    get:
      operationId: retrieveResultVisualization
      description: 'PNG rendering of 2D numerical data (example: a spectrogram).'
      parameters:
      - name: uuid
        in: path
        required: true
        description: A UUID string identifying this Result.
        schema:
          type: string
      - name: subprocessor_id
        required: false
        in: query
        description: ''
        schema:
          type: number
      - name: start
        required: false
        in: query
        description: ''
        schema:
          type: number
          default: 0
      - name: stop
        required: false
        in: query
        description: ''
        schema:
          type: number
          default: 0
      - name: width
        required: false
        in: query
        description: ''
        schema:
          type: number
          default: 1024
      - name: height
        required: false
        in: query
        description: ''
        schema:
          type: number
          default: 128
      responses:
        '200':
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/ResultVisualization'
          description: ''
      tags:
      - timeside
  /api/analysis_tracks/{uuid}/set_parameters/:
    post:
      operationId: setParametersAnalysisTrack
      description: ''
      parameters:
      - name: uuid
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnalysisTrack'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTrack'
          description: ''
      tags:
      - timeside
  /api-token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - timeside-token-auth
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - timeside
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - timeside
  /api/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - timeside
components:
  schemas:
    User:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - username
    ItemList:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        player_url:
          type: string
          readOnly: true
        source_file:
          type: string
          format: binary
          description: Audio file to process.
        source_url:
          type: string
          format: uri
          description: URL of a streamable audio source to process.
          maxLength: 1024
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        mime_type:
          type: string
          maxLength: 256
        author:
          type: string
          nullable: true
        external_id:
          type: string
          description: 'Provider''s id of the audio source.


            e.g. for Deezer preview: 4763165


            e.g. for YouTube: oRdxUFDoQe0'
          maxLength: 256
    Item:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        player_url:
          type: string
          readOnly: true
        picture_url:
          type: string
          readOnly: true
        artist:
          type: string
          readOnly: true
        album:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        source_file:
          type: string
          format: binary
          description: Audio file to process.
        source_url:
          type: string
          format: uri
          description: URL of a streamable audio source to process.
          maxLength: 1024
          pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        mime_type:
          type: string
          maxLength: 256
        audio_url:
          type: object
          properties:
            mp3:
              type: string
              format: uri
              readOnly: true
              pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
                d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\\
                d?)){3}|\\[[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF\
                0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                d{2,5})?(?:[/?#][^\\s]*)?\\z"
            ogg:
              type: string
              format: uri
              readOnly: true
              pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
                d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\\
                d?)){3}|\\[[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF\
                0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                d{2,5})?(?:[/?#][^\\s]*)?\\z"
            flac:
              type: string
              format: uri
              readOnly: true
              pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
                d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\\
                d?)){3}|\\[[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF\
                0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                d{2,5})?(?:[/?#][^\\s]*)?\\z"
          readOnly: true
        audio_duration:
          type: number
          readOnly: true
          description: Duration of audio track.
        samplerate:
          type: integer
          readOnly: true
          description: Sampling rate of audio source file.
        external_uri:
          type: string
          description: 'Provider''s URI of the audio source.


            e.g. for Deezer preview: http://www.deezer.com/track/4763165


            e.g. for YouTube: https://www.youtube.com/watch?v=oRdxUFDoQe0'
          maxLength: 1024
        external_id:
          type: string
          description: 'Provider''s id of the audio source.


            e.g. for Deezer preview: 4763165


            e.g. for YouTube: oRdxUFDoQe0'
          maxLength: 256
        waveform_url:
          type: string
          readOnly: true
        annotation_tracks:
          type: array
          items:
            type: string
          readOnly: true
        analysis_tracks:
          type: array
          items:
            type: string
          readOnly: true
        provider:
          type: string
          nullable: true
          description: Audio provider (e.g. Deezer, Youtube, etc.)
    Provider:
      type: object
      properties:
        pid:
          type: string
          maxLength: 128
        uuid:
          type: string
          format: uuid
          readOnly: true
        source_access:
          type: boolean
          description: Whether or not the audio is freely available from the provider.
    Selection:
      type: object
      properties:
        title:
          type: string
          maxLength: 512
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        items:
          type: array
          items:
            type: string
        selections:
          type: array
          items:
            type: string
          description: Include other selections in an selection.
        author:
          type: string
          nullable: true
    ProcessorList:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        pid:
          enum:
          - aubio_melenergy
          - aubio_mfcc
          - aubio_pitch
          - aubio_silence
          - aubio_specdesc
          - aubio_temporal
          - essentia_dissonance
          - vamp_constantq
          - vamp_crest
          - vamp_flatness
          - vamp_kurtosis
          - vamp_simple_host
          - vamp_spectral_centroid
          - vamp_spectral_kurtosis
          - vamp_spectral_slope
          - loudness_itu
          - spectrogram_analyzer
          - onset_detection_function
          - spectrogram_analyzer_buffer
          - waveform_analyzer
          - mean_dc_shift
          - essentia_dissonance_value
          - vamp_tempo
          - vamp_tuning
          - level
          - flac_aubio_encoder
          - vorbis_aubio_encoder
          - wav_aubio_encoder
          - live_encoder
          - flac_encoder
          - aac_encoder
          - mp3_encoder
          - vorbis_encoder
          - opus_encoder
          - wav_encoder
          - webm_encoder
          - grapher_aubio_pitch
          - grapher_aubio_silence
          - grapher_dissonance
          - grapher_vamp_cqt
          - grapher_loudness_itu
          - spectrogram
          - grapher_onset_detection_function
          - grapher_waveform
          - spectrogram_log
          - spectrogram_lin
          - waveform_simple
          - waveform_centroid
          - waveform_contour_black
          - waveform_contour_white
          - waveform_transparent
          type: string
        url:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 64
      required:
      - pid
    Processor:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        pid:
          enum:
          - aubio_melenergy
          - aubio_mfcc
          - aubio_pitch
          - aubio_silence
          - aubio_specdesc
          - aubio_temporal
          - essentia_dissonance
          - vamp_constantq
          - vamp_crest
          - vamp_flatness
          - vamp_kurtosis
          - vamp_simple_host
          - vamp_spectral_centroid
          - vamp_spectral_kurtosis
          - vamp_spectral_slope
          - loudness_itu
          - spectrogram_analyzer
          - onset_detection_function
          - spectrogram_analyzer_buffer
          - waveform_analyzer
          - mean_dc_shift
          - essentia_dissonance_value
          - vamp_tempo
          - vamp_tuning
          - level
          - flac_aubio_encoder
          - vorbis_aubio_encoder
          - wav_aubio_encoder
          - live_encoder
          - flac_encoder
          - aac_encoder
          - mp3_encoder
          - vorbis_encoder
          - opus_encoder
          - wav_encoder
          - webm_encoder
          - grapher_aubio_pitch
          - grapher_aubio_silence
          - grapher_dissonance
          - grapher_vamp_cqt
          - grapher_loudness_itu
          - spectrogram
          - grapher_onset_detection_function
          - grapher_waveform
          - spectrogram_log
          - spectrogram_lin
          - waveform_simple
          - waveform_centroid
          - waveform_contour_black
          - waveform_contour_white
          - waveform_transparent
          type: string
        url:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 64
        parameters_schema:
          type: string
          readOnly: true
      required:
      - pid
    SubProcessor:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 256
        processor:
          type: string
          nullable: true
        sub_processor_id:
          type: string
          maxLength: 128
      required:
      - sub_processor_id
    Preset:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        processor:
          type: string
          nullable: true
        parameters:
          type: object
    Experience:
      type: object
      properties:
        title:
          type: string
          maxLength: 512
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        presets:
          type: array
          items:
            type: string
        is_public:
          type: boolean
        author:
          type: string
          nullable: true
    Task:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        experience:
          type: string
          nullable: true
          description: Experience prossessed in the task.
        selection:
          type: string
          nullable: true
          description: Selection prossessed in the task.
        status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          description: 'Task''s status:


            failed: 0


            draft: 1


            pending: 2


            running: 3


            done: 4'
          minimum: -2147483648
          maximum: 2147483647
        author:
          type: string
          nullable: true
        item:
          type: string
          nullable: true
          description: Single item prossessed in the task.
        test:
          type: boolean
          description: boolean to avoid celery when testing
    Analysis:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        render_type:
          enum:
          - 0
          - 1
          type: integer
          description: 'Rendering types:


            vector: 0


            image: 1'
          minimum: -2147483648
          maximum: 2147483647
        preset:
          type: string
        sub_processor:
          type: string
        parameters_schema:
          type: object
        test:
          type: boolean
          description: boolean to avoid celery when testing
      required:
      - preset
      - sub_processor
      - parameters_schema
    AnalysisTrack:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 512
        description:
          type: string
        analysis:
          type: string
        item:
          type: string
        result_url:
          type: string
          readOnly: true
        parameters_schema:
          type: string
          readOnly: true
        parameters_default:
          type: string
          readOnly: true
        parametrizable:
          type: string
          readOnly: true
      required:
      - analysis
    AnnotationTrack:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        item:
          type: string
        title:
          type: string
          maxLength: 512
        description:
          type: string
        author:
          type: string
          nullable: true
        is_public:
          type: boolean
        overlapping:
          type: boolean
        annotations:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
              uuid:
                type: string
                format: uuid
                readOnly: true
              track:
                type: string
              title:
                type: string
                maxLength: 512
              description:
                type: string
              start_time:
                type: number
              stop_time:
                type: number
            required:
            - track
            - stop_time
          readOnly: true
      required:
      - item
    Annotation:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        track:
          type: string
        results:
          type: array
          items:
            type: string
        title:
          type: string
          maxLength: 512
        description:
          type: string
        start_time:
          type: number
        stop_time:
          type: number
      required:
      - track
      - stop_time
    Result:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        url:
          type: string
          readOnly: true
        item:
          type: string
          nullable: true
          description: Item on which a preset has been applied.
        preset:
          type: string
          nullable: true
          description: Preset applied on an item.
        status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          type: integer
          description: 'Status of the task giving the result:


            failed: 0


            draft: 1


            pending: 2


            running: 3


            done: 4'
          minimum: -2147483648
          maximum: 2147483647
        mime_type:
          type: string
          maxLength: 256
        hdf5:
          type: string
          format: binary
          description: Numerical result of the processing stored in an hdf5 file.
        file:
          type: string
          format: binary
          description: 'Non numerical result stored in a file

            (image, transcoded audio, etc.)'
        run_time:
          type: string
          nullable: true
          description: Duration of the result computing.
    ItemWaveform:
      type: object
      properties:
        item_url:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 512
        waveform_url:
          type: string
          readOnly: true
        waveform:
          type: object
          properties:
            start:
              type: integer
              default: 0
            stop:
              type: integer
              default: -1
            nb_pixels:
              type: integer
              minimum: 0
            min:
              type: array
              items:
                type: number
            max:
              type: array
              items:
                type: number
            time:
              type: array
              items:
                type: integer
          required:
          - nb_pixels
          - min
          - max
          - time
          readOnly: true
        waveform_image_url:
          type: string
          readOnly: true
    ResultVisualization:
      type: object
      properties:
        visualization:
          type: object
          properties:
            subprocessor_id:
              type: string
              readOnly: true
            start:
              type: number
              default: 0
            stop:
              type: number
              default: -1
            width:
              type: integer
              default: 1024
            height:
              type: integer
              default: 128
          readOnly: true
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        refresh:
          type: string
          readOnly: true
        access:
          type: string
          readOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: https://timeside.ircam.fr/
  description: Production server
- url: https://staging.timeside.ircam.fr/
  description: Staging server
- url: http://localhost:8000/
  description: Local server
security:
- bearerAuth: []
