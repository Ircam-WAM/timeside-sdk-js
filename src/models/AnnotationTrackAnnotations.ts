/* tslint:disable */
/* eslint-disable */
/**
 * TimeSide API
 * RESTful API of TimeSide, a scalable audio processing framework.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnnotationTrackAnnotations
 */
export interface AnnotationTrackAnnotations {
    /**
     * 
     * @type {string}
     * @memberof AnnotationTrackAnnotations
     */
    readonly url?: string;
    /**
     * 
     * @type {string}
     * @memberof AnnotationTrackAnnotations
     */
    readonly uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof AnnotationTrackAnnotations
     */
    track: string;
    /**
     * 
     * @type {string}
     * @memberof AnnotationTrackAnnotations
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof AnnotationTrackAnnotations
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof AnnotationTrackAnnotations
     */
    startTime?: number;
    /**
     * 
     * @type {number}
     * @memberof AnnotationTrackAnnotations
     */
    stopTime: number;
}

export function AnnotationTrackAnnotationsFromJSON(json: any): AnnotationTrackAnnotations {
    return AnnotationTrackAnnotationsFromJSONTyped(json, false);
}

export function AnnotationTrackAnnotationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationTrackAnnotations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'track': json['track'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'startTime': !exists(json, 'start_time') ? undefined : json['start_time'],
        'stopTime': json['stop_time'],
    };
}

export function AnnotationTrackAnnotationsToJSON(value?: AnnotationTrackAnnotations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'track': value.track,
        'title': value.title,
        'description': value.description,
        'start_time': value.startTime,
        'stop_time': value.stopTime,
    };
}


