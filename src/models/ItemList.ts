/* tslint:disable */
/* eslint-disable */
/**
 * TimeSide API
 * RESTful API of TimeSide, a scalable audio processing framework.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemList
 */
export interface ItemList {
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    readonly uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    readonly url?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    readonly playerUrl?: string;
    /**
     * Audio file to process.
     * @type {Blob}
     * @memberof ItemList
     */
    sourceFile?: Blob;
    /**
     * URL of a streamable audio source to process.
     * @type {string}
     * @memberof ItemList
     */
    sourceUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    mimeType?: string;
    /**
     * 
     * @type {string}
     * @memberof ItemList
     */
    author?: string | null;
    /**
     * Provider\'s id of the audio source.  e.g. for Deezer preview: 4763165  e.g. for YouTube: oRdxUFDoQe0
     * @type {string}
     * @memberof ItemList
     */
    externalId?: string;
}

export function ItemListFromJSON(json: any): ItemList {
    return ItemListFromJSONTyped(json, false);
}

export function ItemListFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'playerUrl': !exists(json, 'player_url') ? undefined : json['player_url'],
        'sourceFile': !exists(json, 'source_file') ? undefined : json['source_file'],
        'sourceUrl': !exists(json, 'source_url') ? undefined : json['source_url'],
        'mimeType': !exists(json, 'mime_type') ? undefined : json['mime_type'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'externalId': !exists(json, 'external_id') ? undefined : json['external_id'],
    };
}

export function ItemListToJSON(value?: ItemList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'source_file': value.sourceFile,
        'source_url': value.sourceUrl,
        'mime_type': value.mimeType,
        'author': value.author,
        'external_id': value.externalId,
    };
}


