/* tslint:disable */
/* eslint-disable */
/**
 * TimeSide API
 * RESTful API of TimeSide, a scalable audio processing framework.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemWaveformWaveform
 */
export interface ItemWaveformWaveform {
    /**
     * 
     * @type {number}
     * @memberof ItemWaveformWaveform
     */
    start?: number;
    /**
     * 
     * @type {number}
     * @memberof ItemWaveformWaveform
     */
    stop?: number;
    /**
     * 
     * @type {number}
     * @memberof ItemWaveformWaveform
     */
    nbPixels: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof ItemWaveformWaveform
     */
    min: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof ItemWaveformWaveform
     */
    max: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof ItemWaveformWaveform
     */
    time: Array<number>;
}

export function ItemWaveformWaveformFromJSON(json: any): ItemWaveformWaveform {
    return ItemWaveformWaveformFromJSONTyped(json, false);
}

export function ItemWaveformWaveformFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemWaveformWaveform {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': !exists(json, 'start') ? undefined : json['start'],
        'stop': !exists(json, 'stop') ? undefined : json['stop'],
        'nbPixels': json['nb_pixels'],
        'min': json['min'],
        'max': json['max'],
        'time': json['time'],
    };
}

export function ItemWaveformWaveformToJSON(value?: ItemWaveformWaveform | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': value.start,
        'stop': value.stop,
        'nb_pixels': value.nbPixels,
        'min': value.min,
        'max': value.max,
        'time': value.time,
    };
}


