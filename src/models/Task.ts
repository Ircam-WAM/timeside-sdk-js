/* tslint:disable */
/* eslint-disable */
/**
 * TimeSide API
 * RESTful API of TimeSide,                 a scalable audio processing framework
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    author?: string;
    /**
     * experience prossessed in the task
     * @type {string}
     * @memberof Task
     */
    experience?: string;
    /**
     * single item prossessed in the task
     * @type {string}
     * @memberof Task
     */
    item?: string;
    /**
     * selection prossessed in the task
     * @type {string}
     * @memberof Task
     */
    selection?: string;
    /**
     *          Task\'s status:         failed: {_FAILED}         draft: {_DRAFT}         pending: {_PENDING}         running: {_RUNNING}         done: {_DONE}         
     * @type {number}
     * @memberof Task
     */
    status?: number;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    readonly url?: string;
    /**
     * 
     * @type {string}
     * @memberof Task
     */
    readonly uuid?: string;
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'author': !exists(json, 'author') ? undefined : json['author'],
        'experience': !exists(json, 'experience') ? undefined : json['experience'],
        'item': !exists(json, 'item') ? undefined : json['item'],
        'selection': !exists(json, 'selection') ? undefined : json['selection'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
    };
}

export function TaskToJSON(value?: Task | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'author': value.author,
        'experience': value.experience,
        'item': value.item,
        'selection': value.selection,
        'status': value.status,
    };
}


